# Copyright 2015 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# Debug printing.

)debug parse
23
	1
	<int (23)>
	23

)debug parse
3 4 rho iota 12
	1
	(<3 4> rho (iota <int (12)>))
	 1  2  3  4
	 5  6  7  8
	 9 10 11 12

)debug parse
op a base b = ((ceil b log a) rho b) encode a
	1
	(((ceil (<var b> log <var a>)) rho <var b>) encode <var a>)
	op a base b = (((ceil (<var b> log <var a>)) rho <var b>) encode <var a>)

)debug tokens
23
	1
	:2: emit Number: "23"
	:3: emit Newline: "\n"
	23

# Fixed bugs in lexing: leading + wasn't part of a number, for example, even though - was.
)debug tokens
+2
	1
	:2: emit Number: "+2"
	:3: emit Newline: "\n"
	2

)debug tokens
-1/2j-5/2
	1
	:2: emit Number: "-1/2j-5/2"
	:3: emit Newline: "\n"
	-1/2j-5/2

)debug tokens
op a base b = ((ceil b log a) rho b) encode a
	1
	 :2: emit Op: "op"
	 :2: emit Identifier: "a"
	 :2: emit Identifier: "base"
	 :2: emit Identifier: "b"
	 :2: emit Assign: "="
	 :2: emit LeftParen: "("
	 :2: emit LeftParen: "("
	 :2: emit Identifier: "ceil"
	 :2: emit Identifier: "b"
	 :2: emit Identifier: "log"
	 :2: emit Identifier: "a"
	 :2: emit RightParen: ")"
	 :2: emit Identifier: "rho"
	 :2: emit Identifier: "b"
	 :2: emit RightParen: ")"
	 :2: emit Identifier: "encode"
	 :2: emit Identifier: "a"
	 :3: emit Newline: "\n"

)debug tokens
)debug tokens
	1
	 :2: emit RightParen: ")"
	 :2: emit Identifier: "debug"
	 :2: emit Identifier: "tokens"
	 :3: emit Newline: "\n"
	0

)debug types
23
	1
	value.Int
	23

)debug types
'c'
	1
	value.Char
	c

)debug types
1 2 3
	1
	*value.Vector
	1 2 3

)debug types
sqrt 2
	1
	value.BigFloat
	1.41421356237

)debug types
1.41421356237
	1
	value.BigRat
	141421356237/100000000000

)debug types
2 3 rho iota 6
	1
	*value.Matrix
	1 2 3
	4 5 6
